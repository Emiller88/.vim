
" Appearance {
    " Pretty indent indicators
    NeoBundle 'Yggdroot/indentLine'
        let g:indentLine_color_gui = '#2c3234'

    " A nicer status line that isn't as heavy as powerline
    NeoBundle 'bling/vim-airline'
        let g:airline#extensions#hunks#enabled = 0
        let g:airline#extensions#whitespace#enabled = 0

        let g:airline_left_sep=""
        let g:airline_right_sep=""
        let g:airline_enable_branch=1
        let g:airline_enable_prefix=1
        let g:airline_paste_symbol = 'ρ'

        let g:airline_mode_map = {'n':'N', 'i':'I', 'R':'R', 'v':'V', 'V':'V-', 'c':'CMD', '':'V¤'}
        let g:airline_section_x = "%{strlen(&fenc)>0?&fenc:''}"
        let g:airline_section_y = "%{strlen(&filetype)>0?&filetype:''}"
" }

" File search {
    " More powerful file searching
    if executable('ag')
        NeoBundle 'rking/ag.vim'
    elseif executable('ack')
        NeoBundle 'mileszs/ack.vim'
    endif

    " Project-wide search and replace
    NeoBundle 'EasyGrep'

    " A filetree navigator replacement for netrw
    NeoBundle 'scrooloose/nerdtree'
        let NERDTreeMinimalUI=1
        let NERDTreeIgnore=['\.pyc', '\~$', '\.swo$', '\.swp$', '\.git$', '\.hg', '\.svn', '\.bzr', '\.settings', '\.project', '\.DS_Store']
        let NERDTreeQuitOnOpen=0
        let NERDTreeShowBookmarks=0
        let NERDTreeShowHidden=1
        let NERDTreeAutoDeleteBuffer=1

    " Command-T, Peepopen or Goto-anything, but for vim, written in VimL
    NeoBundle 'kien/ctrlp.vim'
    " Ctrlp extension for jumping to functions
    NeoBundle 'tacahiroy/ctrlp-funky'
    " Ctrlp extension for listing git modified files
    NeoBundle 'jasoncodes/ctrlp-modified.vim'
        let g:ctrlp_extensions = ['tag', 'buffertag', 'quickfix', 'line', 'funky']
        let g:ctrlp_max_height = 15
        let g:ctrlp_cache_dir = "~/.vim/tmp/ctrlp"
        let g:ctrlp_working_path_mode = 0
        let g:ctrlp_custom_ignore = {
                    \ 'dir':  '\.git$\|\.hg$\|\.svn|\.settings$',
                    \ 'file': '\.exe$\|\.so$\|\.dll|\.sass\-cache|\.classpath|\.project$' }
        let g:ctrlp_user_command = {
                    \ 'types': [
                    \   ['.git', 'cd %s && git ls-files . --cached --exclude-standard --others'],
                    \   ['.hg', 'hg --cwd %s locate -I']
                    \ ],
                    \ 'fallback': 'ag %s -l --nocolor -g ""'
                \ }
" }

" Editing {
    " Auto-closes delimiters like (),{},[],etc.
    NeoBundle 'Raimondi/delimitMate'
        let g:delimitMate_expand_cr = 1
        let g:delimitMate_expand_space = 1

    NeoBundle 'mattn/emmet-vim'
    " Improved % and hopping delimiters (can now be 1+ character)
    NeoBundle 'matchit.zip'
    " Clean way to close buffers without altering window layout
    NeoBundle 'bufkill.vim'
    " For aligning text
    NeoBundle 'godlygeek/tabular'
    " Comment out code with native comment syntax
    NeoBundle 'tomtom/tcomment_vim'
        let g:tcomment_types = {}
        let g:tcomment_types['blade'] = '{-- %s --}'
        let g:tcomment_types['twig'] = '{# %s #}'

    " Auto-place code blocks for languages like ruby or viml
    NeoBundle 'tpope/vim-endwise'
    " Offers some plugins better compatibility with repeat ('.') 
    NeoBundle 'tpope/vim-repeat'
    " Incrementing/decrementing numbers, dates and time formatted strings
    NeoBundle 'tpope/vim-speeddating'
    " Easy changing and insertion of surrounding delimiters (e.g. quotes,
    " parenthesis, etc.)
    NeoBundle 'tpope/vim-surround'
    " Sublime-text multi-cursors!
    NeoBundle 'terryma/vim-multiple-cursors'
    " f on steroids
    NeoBundle 'goldfeld/vim-seek'
    " Muh [] binds
    NeoBundle 'tpope/vim-unimpaired'

    " Snippets system
    if has("python")
        NeoBundle 'SirVer/ultisnips'
        " My snippets
        NeoBundle 'hlissner/vim-ultisnips-snippets'
            " Ignore the default snippets so I (and others) can define their own
            let g:UltiSnipsSnippetDirectories = ['snippets']
    endif

    NeoBundle 'AndrewRadev/switch.vim'
" }

" Remote resources {
    " Visual git diffs in the gutter
    NeoBundle 'airblade/vim-gitgutter'
        let g:gitgutter_eager = 0

    " 'a Git wrapper so awesome, it should be illegal'
    NeoBundle 'tpope/vim-fugitive'
    " Async compiler plugins
    NeoBundle 'tpope/vim-dispatch'
    " Glorious gists!
    NeoBundle 'mattn/webapi-vim'
    NeoBundle 'mattn/gist-vim'
" }

" Programming {
    " Awesome autocompletion
    NeoBundle 'Valloric/YouCompleteMe', {'build': {
                \ 'mac': './install.sh --clang-completer',
                \ 'unix': './install.sh --clang-completer' } }
        let g:ycm_autoclose_preview_window_after_insertion = 1
        let g:ycm_confirm_extra_conf = 0


    " Syntax checkers for a multitude of languages
    NeoBundle 'scrooloose/syntastic'
        let g:syntastic_enable_highlighting = 1
        let g:syntastic_auto_loc_list=1
        let g:syntastic_quiet_warnings=1
        let g:syntastic_phpcs_disable=1
        let g:syntastic_echo_current_error=1
        let g:syntastic_auto_jump = 1
        let g:syntastic_enable_balloons = 0

        let g:syntastic_error_symbol = '►'
        let g:syntastic_warning_symbol = '►'

        let g:syntastic_loc_list_height = 5

    " Running code inline for testing purposes
    NeoBundle 'notalex/vim-run-live'

    " Previewing markdown, rdoc, textile and html files in the browser
    NeoBundle 'spf13/vim-preview'

" }

" External Tools {
    " Color picker pop-up
    NeoBundle 'PickAColor.vim'

    " Communication with tmux
    NeoBundle 'jgdavey/tslime.vim'
" }

" Syntax {
    " HTML
    NeoBundleLazy 'othree/html5.vim',           {'autoload': {'filetypes': ['html', 'blade', 'twig'] }}
    NeoBundleLazy 'Valloric/MatchTagAlways',    {'autoload': {'filetypes': ['html', 'blade', 'twig'] }}
    NeoBundleLazy 'digitaltoad/vim-jade',       {'autoload': {'filetypes': ['jade']}}

    " CSS/SCSS/LESS
    NeoBundleLazy 'hlissner/scss-syntax.vim',   {'autoload': {'filetypes': ['scss']}}

    " PHP
    NeoBundleLazy 'StanAngeloff/php.vim',       {'autoload': {'filetypes': ['php', 'blade']}}
    NeoBundleLazy '2072/PHP-Indenting-for-VIm', {'autoload': {'filetypes': ['php']}}
    NeoBundleLazy 'shawncplus/phpcomplete.vim', {'autoload': {'filetypes': ['php', 'blade']}}
    NeoBundleLazy 'stephpy/vim-phpdoc',         {'autoload': {'filetypes': ['php']}}
    NeoBundleLazy 'joonty/vim-phpunitqf',       {'autoload': {'filetypes': ['php']}}

    " PHP.laravel
    NeoBundleLazy 'xsbeats/vim-blade',          {'autoload': {'filetypes': ['php', 'blade']}}

    " Python
    NeoBundleLazy 'indentpython.vim--nianyang', {'autoload': {'filetypes': ['python']}}
    NeoBundleLazy 'python_match.vim',           {'autoload': {'filetypes': ['python']}}

    " Javascript
    NeoBundleLazy 'pangloss/vim-javascript',    {'autoload': {'filetypes': ['javascript']}}
    NeoBundleLazy 'myhere/vim-nodejs-complete', {'autoload': {'filetypes': ['javascript']}}

    " Ruby
    NeoBundleLazy 'vim-ruby/vim-ruby',          {'autoload': {'filetypes': ['ruby']}}
    NeoBundleLazy 'tpope/vim-rails',            {'autoload': {'filetypes': ['ruby']}}

    " C/C++
    NeoBundleLazy 'octol/vim-cpp-enhanced-highlight', {'autoload': {'filetypes': ['cpp']}}

    " Other
    NeoBundleLazy 'spf13/vim-markdown',         {'autoload': {'filetypes': ['markdown']}}

    NeoBundleLazy 'rdolgushin/PlantUML-Vim',    {'autoload': {'filetypes': ['plantuml']}}
        let g:plantuml_executable_script = 'java -jar plantuml.jar'
" }

" vim:set filetype=vim fmr={,} fdl=0 fdm=marker:
